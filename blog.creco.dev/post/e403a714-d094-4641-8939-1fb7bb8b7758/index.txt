1:"$Sreact.fragment"
2:I[7951,["428","static/chunks/428-d9e925965c352fc6.js","177","static/chunks/app/layout-7f42cb55db1d85e2.js"],"Provider"]
3:I[1305,[],""]
4:I[6861,[],""]
5:I[3519,["428","static/chunks/428-d9e925965c352fc6.js","917","static/chunks/917-ffcc91d4040fdb33.js","17","static/chunks/17-7de176e02b0bc1ca.js","812","static/chunks/app/(id)/(prebuild)/e403a714-d094-4641-8939-1fb7bb8b7758/page-ce1977f3378d7c95.js"],"PostPage"]
6:I[5023,[],"MetadataBoundary"]
8:I[5023,[],"OutletBoundary"]
b:I[3573,[],"AsyncMetadataOutlet"]
d:I[5023,[],"ViewportBoundary"]
f:I[7240,[],""]
:HL["/post/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/post/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/post/_next/static/css/6e9c6e6502c03c58.css","style"]
:HL["/post/_next/static/css/c44545a39d3b4a63.css","style"]
0:{"P":null,"b":"HlmDr_dbQIaZE7bLL--Z5","p":"/post","c":["","e403a714-d094-4641-8939-1fb7bb8b7758",""],"i":false,"f":[[["",{"children":["(id)",{"children":["(prebuild)",{"children":["e403a714-d094-4641-8939-1fb7bb8b7758",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/post/_next/static/css/6e9c6e6502c03c58.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_178516 __variable_66e6cd antialiased","children":["$","$L2",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}],{"children":["(id)",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:children:props:notFound:0:1:props:style","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:children:props:notFound:0:1:props:children:props:children:1:props:style","children":404}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:children:props:notFound:0:1:props:children:props:children:2:props:style","children":["$","h2",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:children:props:notFound:0:1:props:children:props:children:2:props:children:props:style","children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(prebuild)",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["e403a714-d094-4641-8939-1fb7bb8b7758",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","$L5",null,{"id":"e403a714-d094-4641-8939-1fb7bb8b7758"}],["$","$L6",null,{"children":"$L7"}],[["$","link","0",{"rel":"stylesheet","href":"/post/_next/static/css/c44545a39d3b4a63.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L8",null,{"children":["$L9","$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","nsBTjiDIjrebAkXES09Ls",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[3573,[],"AsyncMetadata"]
7:["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]
a:null
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
13:T3212,<br>`소요 시간: 12분`<br><br>> 이 글은 우땅콘(우당탕탕 도서관 컨퍼런스)에서 짧게 발표했던 주제를 글로 작성한 내용입니다.<br><br>![](https://nodejsdeveloper.notion.site/image/attachment%3A1e6236ec-9318-4128-80d3-36028267d9af%3AChatGPT_Image_2025%E1%84%82%E1%85%A7%E1%86%AB_5%E1%84%8B%E1%85%AF%E1%86%AF_1%E1%84%8B%E1%85%B5%E1%86%AF_%E1%84%8B%E1%85%A9%E1%84%8C%E1%85%A5%E1%86%AB_05_00_56.png?table=block&id=1e5fb879-26e4-8015-923f-ef92ac109c40&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br>ㅤ<br><br>저는 토스코어 프론트엔드 플랫폼 팀에서 프론트엔드 개발환경에 집중하고 있는 정석호입니다.<br><br>오늘은 "프론트엔드의 지속적인 성장"이라는 내용으로 이야기를 나눠 보고 싶습니다.<br><br>제가 이제 6년차 정도 되었는데요, 일하다 보면서 문득 이런 생각들이 들더라구요, `"나는 지금 물경력이 아닐까?"` , `"내가 내 연차에 맞는 수준일까?"` ,  `"나만 이런 고민을 하고 있는 건 아닐까?"`<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F4217b69f-be6d-4871-90c1-ebb73acadf9d%2FUntitled.png?table=block&id=59dbdc4a-f4ca-4c0a-b504-434f956c3d7f&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>이런 고민들을 하면서 프론트엔드 엔지니어, 더 나아가서는 개발자의 성장에 대해서 생각을 해봤습니다.<br><br>성장이란 어느 순간에 찾아올까요?<br><br>꼭 개발을 잘 하게 되는 것만이 성장의 결과일까요?<br><br>일단 밑밥을 먼저 깔고 가보겠습니다.ㅎㅎ<br><br>ㅤ<br><br># 은탄환은 없다.<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F96242377-2f41-429c-b91c-ae6948af141e%2FUntitled.png?table=block&id=60c0a10d-ad4c-4c82-9a61-002376144eca&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>모든 문제를 해결해주는 은탄환이 없듯이, 사실상 정해진 정답은 없습니다. 상황에 따라 각자에게 적절한 방법과 성장의 대상이 다 다를 것 같아요.<br><br>그럼에도 이번에는 그나마 메타적으로 한번 접근해보고 싶었습니다.<br><br>그래서 `성장`이란 키워드를 다양한 관점으로 나눠서 생각해보기로 했어요.<br><br>ㅤ<br><br># 1. 수동적 성장 vs 목표한 성장<br><br>제가 생각한 `수동적 성장`은 `"성장에 대해 따로 고민하지 않아도 자연스럽게 성장하는 것"`인데요<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F24638c40-403a-498e-b7b5-ea80decf193a%2FUntitled.png?table=block&id=67af19a8-e176-4a21-86e2-3c06765e7dbd&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>보통 처음 입사한 `신입` 혹은 `이직한지 얼마 되지 않은 경력` 모두에게 있을 수 있는 성장 포인트입니다.<br><br>이론만으로 알고 있던 내용을 실전에서 써본다거나, 내가 알던 모든 맥락을 잃어버리고 완전히 새로운 곳에서 적응한다는 등 모두 나에게 없던 무언가를 얻을 수 있는 기회죠.<br><br>하지만 이런 성장의 경우, 보편적으로는 반복적인 업무와 크게 바뀌지 않는 맥락들로 인해 **장기적으로 지속되기 어렵습니다.**<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F3abc48d7-dbed-404e-8ddb-e2d64ce00afb%2FUntitled.png?table=block&id=164a15d1-b507-4c2e-9982-bb74cad6ff7e&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>그래서 입사한지 3년정도 지나게 되면, 보통 처음에 보셨던 걱정들을 하기 시작하죠.<br><br>● 난 물경력이 아닐까?<br>● 지금 이 일을 계속 해도 괜찮은 걸까?<br><br>되고 싶은 모습을 정하지 않으면 우리가 원하는 모습이 될 수 없습니다. 눈 가리고 달리기를 하는 것과 마찬가지에요.<br><br>예를 들면 다음과 같은 모습을 설정할 수 있어요.<br><br>### 목표한 하드 스킬 성장 예시<br><br>● 자바스크립트의 모듈 시스템 ESM/CJS 에 명확하게 이해하고 나만의 라이브러리를 배포할 수 있다.<br>● 다른사람에게 번들러와 트랜스파일러에 대해 명확하게 설명할 줄 알고 대표적인 예시 라이브러리의 구현체를 파악해봤다.<br>● Next.js / Node.js / React 등등의 최신 업데이트를 꾸준히 확인하고 내 서비스에 PoC 할 수 있다.<br><br>### 목표한 소프트 스킬 성장 예시<br><br>● 내가 해야할 작업의 소요 시간을 최대한 가깝게 예측할 수 있다.<br>● 써보고 싶은 기술 도입에 대해 같은 팀원들을 설득할 수 있다.<br><br>ㅤ<br><br># 2. 성장하기 좋은 가장 적절한 난이도<br><br>### 골디락스 존<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F828880d0-62e4-4a69-9bfc-d9594d056d84%2FUntitled.png?table=block&id=d95975ab-09e0-492f-9e05-f4196472ebea&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>이 그래프는 성장하기 가장 좋은 목표의 난이도를 알려줍니다.<br><br>중요한 점은 도전적이며 달성이 가능해야하는데요, 한 마디로 지금의 나라면 할 수도 있을 것 같은 목표들을 말합니다. 그렇다고 너무 쉽다면, 동기부여가 떨어질 수도 있어요.<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F21835a28-6b95-4b51-8de4-5249bbba75ea%2FUntitled.png?table=block&id=b1ebdf7a-555e-4a78-bedb-05dd3b0e1b9f&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>가장 쉬운 예시로 들어보자면, 달리기를 한번도 해본 적 없는 사람은 풀코스 마라톤에 도전했을 때 성장할 수 있을까요? 너무 어려워서 도전조차 쉽지 않습니다. 가장 처음은 쉬지 않고 3km를 달려서 내 현재 역량을 알아보고 내가 세웠던 최고 기록을 계속 해서 뛰어 넘는 도전을 해야 지속적인 재미를 느끼며 성장할 수 있습니다.<br><br>ㅤ<br><br># 장기 지속적인 성장<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F0c4018be-c8b1-4536-bf16-27699658ccf1%2FUntitled.png?table=block&id=24b332bb-557e-4808-9cfb-dad41ea0e405&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>● 현재 내 역량이 어느정도인지<br>● 내가 되고 싶은 모습의 역량은 어느정도인지<br>● 그 격차를 줄이기 위해서 어느정도로 노력해야하는지<br><br>지속적인 성장을 하기 위해서는 이러한 내용들을 명확하게 인지하고 있어야하고 내가 어느정도로 노력해야하는지 알 수 있으며 동기부여도 뒤따라오게 됩니다.<br><br>다음은, 성장을 어렵게 만드는 다양한 부재에 대해서 좀 소개드려볼게요.<br><br>● 공감의 부재<br>ㅤ● 운동을 왜 해야하지?<br>● 중요성의 부재<br>ㅤ● 오늘은 너무 바빠, 내일 가도 돼<br>● 동기부여의 부재<br>ㅤ● 해야하는 것도 공감하고, 오늘 시간도 남는데 가고 싶지 않아.<br><br>반대로 공감이 되지 않거나 중요하지 않다면 안해도 되는 거 아닐까요?<br><br>동기부여가 되지 않는 경우는 한번에 너무 높은 목표를 향해 도전해서 그런건 아닐까요?<br><br>이번 기회에 현재 목표로 하고 있는 것에 어떤 게 부족한지 한번 확인해보는 것도 좋을 것 같아요.<br><br>하지만 현실 세계에서는 항상 최적의 성장을 할 수 있는 업무만 할 수는 없죠?<br><br>● 성장의 기회가 된다면 좋지만,,,,<br>● 일은 일로 하자.<br><br>누구에게는 개발 뿐만 아니라 다양한 개발 외적인 일을 해야하는 경우도 있을 수 있구요.<br><br>주의: 물론 회사는 내 성장을 위한 곳이 아니긴 합니다.<br><br>가장 어렵고 좋은 방법은 바로 `"일과 내 성장을 일치 시키는 것"`이며<br><br>가장 쉽지만 자주하면 좋지 않은 방법 `"일과 내 성장이 일치되는 곳으로 이직"`하는 것 입니다.<br><br>ㅤ<br><br># 그래서 내 연차에 맞는 역량은 뭔데요?<br><br>프론트엔드도 하고 싶은 분야마다 달라서 연차마다 요구되는 역량이 다릅니다.<br><br>e.g.) 토스 FE 직군<br><br>● Frontend Product Developer: 대고객 제품 개발자<br><br>● Frontend UX Engineer: 디자인 시스템 및 인터렉션 개발자<br><br>● Frontend Platform Engineer: FE 의 개발환경 및 생산성 기여 개발자<br><br>(일반적인 대고객 제품 개발자 기준의 개인적인 의견)<br><br>신입<br><br>● 요구사항을 부족함 없이 구현할 수 있는 기본적인 기술적 역량 / 잠재력<br><br>~ 3년차 (주니어)<br><br>● 코드 복잡도를 낮추고 응집도를 높일 수 있는 기술적 역량<br>● 요구사항을 완수할 뿐만 아니라 내가 하고 있는 일정에 차질이 생길 경우 투명하게 공유<br>● 내 일 뿐만 아니라 내 일이 목표로 하는 공동의 목표에 적극적인 기여<br><br>~ 6년차 IC (중니어 ~ 시니어)<br><br>● 굉장히 어려운 문제의 근본적인 원인 분석과 Workaround / 근본적인 해결 방법<br>● 다른 사람의 성장 및 기술적 역량까지 이끌어 낼 수 있는 영향력<br>● 조직 전체의 개발 환경을 개선할 수 있는 역량<br><br>~ 6년차 매니저 (중니어 ~ 시니어)<br><br>● 달성해야하는 목표를 수행하기 위한 가장 빠른 전략을 수립<br>● 수많은 Task 의 우선순위를 적절하게 설정할 수 있어야함<br>● 팀원의 지속적인 성장을 책임지고 끊임없이 동기부여<br><br># `그래서 어떻게 성장할 수 있나요?`<br><br>● 내가 하고 싶은 방향을 정한 다음에 로드맵을 보고 트리를 정하면 됩니다.<br>● https://roadmap.sh/frontend?r=frontend-beginner<br>● https://roadmap.sh/frontend<br><br>ㅤ<br><br># 성장 CheatSheet<br><br>이번 시간을 통해 여러분이 얻어갈 수 있는 포인트가 있으면 좋을 것 같아서 마련해본 장표입니다.<br><br>1달마다 지속적으로 성장에 대한 정량적 수치를 기록하고 추이를 확인해서 나의 현재 위치를 파악하고 다음 단계로 넘어 갈 수 있는 지표와 질문들<br><br>1달을 주기로 회고하면서 내 위치와 성장하고 싶은 방향에 대해 지속적으로 파악해보세요.<br><br>> Q. 1개월 전에 비해 나는 O점 만큼 성장했다. ( 1 ~ 5 점)<br><br>- e.g.) 1점: 반복적인 업무만 지속적으로 하다보니 성장하지 못했다고 생각함<br>- e.g.) 5점: 코드리뷰간 설계에 대해서 새로운 인사이트를 얻었음<br><br>> Q. 지난 1개월동안 나는 내가 바라는 모습에 한발자국 가까워 졌다. ( 1 ~ 5 점)<br><br>- e.g.) 1점: 한달 전 정했던 모습에 가까워지지 못함<br>- e.g.) 5점: 한달 전 정했던 모습을 완전히 달성함<br><br>> Q. 지난 1개월 동안 성장에 가장 큰 장애물은?<br><br>- e.g.) 지속적인 반복 작업<br>- e.g.) 불필요한 야근<br><br>> Q. 1개월 뒤 내가 되고 싶은 구체적인 모습 3가지?<br><br>- e.g.) esbuild 의 동작 방식을 완전히 이해한다.<br>- e.g.) 트랜스파일러와 번들러의 차이에 대해 알게된다.<br>- e.g.) 혼자 레포를 구성해서 서비스를 띄울 수 있다.<br><br>혼자 성장하기 어렵다면<br><br>● 같이 일하는 동료나 사수에게 피드백 요청하기 (사수/동료)<br>    ● "제게 기대하는 역량/모습이 있나요?"<br>    ● "지난 2주간 모습을 봤을 때 더 잘할 수 있는 부분이 있을까요?"<br><br>```<br>이렇게 지속적으로 성장하면서 어려운 문제를 많이 풀어보고 싶다면?<br>```<br><br>채용공고: [Frontend Platform Engineer](https://toss.im/career/job-detail?job_id=4397469003&company=%ED%86%A0%EC%8A%A4&detailedPosition=%EA%B3%B5%ED%86%B5)14:T3212,<br>`소요 시간: 12분`<br><br>> 이 글은 우땅콘(우당탕탕 도서관 컨퍼런스)에서 짧게 발표했던 주제를 글로 작성한 내용입니다.<br><br>![](https://nodejsdeveloper.notion.site/image/attachment%3A1e6236ec-9318-4128-80d3-36028267d9af%3AChatGPT_Image_2025%E1%84%82%E1%85%A7%E1%86%AB_5%E1%84%8B%E1%85%AF%E1%86%AF_1%E1%84%8B%E1%85%B5%E1%86%AF_%E1%84%8B%E1%85%A9%E1%84%8C%E1%85%A5%E1%86%AB_05_00_56.png?table=block&id=1e5fb879-26e4-8015-923f-ef92ac109c40&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br>ㅤ<br><br>저는 토스코어 프론트엔드 플랫폼 팀에서 프론트엔드 개발환경에 집중하고 있는 정석호입니다.<br><br>오늘은 "프론트엔드의 지속적인 성장"이라는 내용으로 이야기를 나눠 보고 싶습니다.<br><br>제가 이제 6년차 정도 되었는데요, 일하다 보면서 문득 이런 생각들이 들더라구요, `"나는 지금 물경력이 아닐까?"` , `"내가 내 연차에 맞는 수준일까?"` ,  `"나만 이런 고민을 하고 있는 건 아닐까?"`<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F4217b69f-be6d-4871-90c1-ebb73acadf9d%2FUntitled.png?table=block&id=59dbdc4a-f4ca-4c0a-b504-434f956c3d7f&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>이런 고민들을 하면서 프론트엔드 엔지니어, 더 나아가서는 개발자의 성장에 대해서 생각을 해봤습니다.<br><br>성장이란 어느 순간에 찾아올까요?<br><br>꼭 개발을 잘 하게 되는 것만이 성장의 결과일까요?<br><br>일단 밑밥을 먼저 깔고 가보겠습니다.ㅎㅎ<br><br>ㅤ<br><br># 은탄환은 없다.<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F96242377-2f41-429c-b91c-ae6948af141e%2FUntitled.png?table=block&id=60c0a10d-ad4c-4c82-9a61-002376144eca&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>모든 문제를 해결해주는 은탄환이 없듯이, 사실상 정해진 정답은 없습니다. 상황에 따라 각자에게 적절한 방법과 성장의 대상이 다 다를 것 같아요.<br><br>그럼에도 이번에는 그나마 메타적으로 한번 접근해보고 싶었습니다.<br><br>그래서 `성장`이란 키워드를 다양한 관점으로 나눠서 생각해보기로 했어요.<br><br>ㅤ<br><br># 1. 수동적 성장 vs 목표한 성장<br><br>제가 생각한 `수동적 성장`은 `"성장에 대해 따로 고민하지 않아도 자연스럽게 성장하는 것"`인데요<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F24638c40-403a-498e-b7b5-ea80decf193a%2FUntitled.png?table=block&id=67af19a8-e176-4a21-86e2-3c06765e7dbd&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>보통 처음 입사한 `신입` 혹은 `이직한지 얼마 되지 않은 경력` 모두에게 있을 수 있는 성장 포인트입니다.<br><br>이론만으로 알고 있던 내용을 실전에서 써본다거나, 내가 알던 모든 맥락을 잃어버리고 완전히 새로운 곳에서 적응한다는 등 모두 나에게 없던 무언가를 얻을 수 있는 기회죠.<br><br>하지만 이런 성장의 경우, 보편적으로는 반복적인 업무와 크게 바뀌지 않는 맥락들로 인해 **장기적으로 지속되기 어렵습니다.**<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F3abc48d7-dbed-404e-8ddb-e2d64ce00afb%2FUntitled.png?table=block&id=164a15d1-b507-4c2e-9982-bb74cad6ff7e&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>그래서 입사한지 3년정도 지나게 되면, 보통 처음에 보셨던 걱정들을 하기 시작하죠.<br><br>● 난 물경력이 아닐까?<br>● 지금 이 일을 계속 해도 괜찮은 걸까?<br><br>되고 싶은 모습을 정하지 않으면 우리가 원하는 모습이 될 수 없습니다. 눈 가리고 달리기를 하는 것과 마찬가지에요.<br><br>예를 들면 다음과 같은 모습을 설정할 수 있어요.<br><br>### 목표한 하드 스킬 성장 예시<br><br>● 자바스크립트의 모듈 시스템 ESM/CJS 에 명확하게 이해하고 나만의 라이브러리를 배포할 수 있다.<br>● 다른사람에게 번들러와 트랜스파일러에 대해 명확하게 설명할 줄 알고 대표적인 예시 라이브러리의 구현체를 파악해봤다.<br>● Next.js / Node.js / React 등등의 최신 업데이트를 꾸준히 확인하고 내 서비스에 PoC 할 수 있다.<br><br>### 목표한 소프트 스킬 성장 예시<br><br>● 내가 해야할 작업의 소요 시간을 최대한 가깝게 예측할 수 있다.<br>● 써보고 싶은 기술 도입에 대해 같은 팀원들을 설득할 수 있다.<br><br>ㅤ<br><br># 2. 성장하기 좋은 가장 적절한 난이도<br><br>### 골디락스 존<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F828880d0-62e4-4a69-9bfc-d9594d056d84%2FUntitled.png?table=block&id=d95975ab-09e0-492f-9e05-f4196472ebea&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>이 그래프는 성장하기 가장 좋은 목표의 난이도를 알려줍니다.<br><br>중요한 점은 도전적이며 달성이 가능해야하는데요, 한 마디로 지금의 나라면 할 수도 있을 것 같은 목표들을 말합니다. 그렇다고 너무 쉽다면, 동기부여가 떨어질 수도 있어요.<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F21835a28-6b95-4b51-8de4-5249bbba75ea%2FUntitled.png?table=block&id=b1ebdf7a-555e-4a78-bedb-05dd3b0e1b9f&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>가장 쉬운 예시로 들어보자면, 달리기를 한번도 해본 적 없는 사람은 풀코스 마라톤에 도전했을 때 성장할 수 있을까요? 너무 어려워서 도전조차 쉽지 않습니다. 가장 처음은 쉬지 않고 3km를 달려서 내 현재 역량을 알아보고 내가 세웠던 최고 기록을 계속 해서 뛰어 넘는 도전을 해야 지속적인 재미를 느끼며 성장할 수 있습니다.<br><br>ㅤ<br><br># 장기 지속적인 성장<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F0c4018be-c8b1-4536-bf16-27699658ccf1%2FUntitled.png?table=block&id=24b332bb-557e-4808-9cfb-dad41ea0e405&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>● 현재 내 역량이 어느정도인지<br>● 내가 되고 싶은 모습의 역량은 어느정도인지<br>● 그 격차를 줄이기 위해서 어느정도로 노력해야하는지<br><br>지속적인 성장을 하기 위해서는 이러한 내용들을 명확하게 인지하고 있어야하고 내가 어느정도로 노력해야하는지 알 수 있으며 동기부여도 뒤따라오게 됩니다.<br><br>다음은, 성장을 어렵게 만드는 다양한 부재에 대해서 좀 소개드려볼게요.<br><br>● 공감의 부재<br>ㅤ● 운동을 왜 해야하지?<br>● 중요성의 부재<br>ㅤ● 오늘은 너무 바빠, 내일 가도 돼<br>● 동기부여의 부재<br>ㅤ● 해야하는 것도 공감하고, 오늘 시간도 남는데 가고 싶지 않아.<br><br>반대로 공감이 되지 않거나 중요하지 않다면 안해도 되는 거 아닐까요?<br><br>동기부여가 되지 않는 경우는 한번에 너무 높은 목표를 향해 도전해서 그런건 아닐까요?<br><br>이번 기회에 현재 목표로 하고 있는 것에 어떤 게 부족한지 한번 확인해보는 것도 좋을 것 같아요.<br><br>하지만 현실 세계에서는 항상 최적의 성장을 할 수 있는 업무만 할 수는 없죠?<br><br>● 성장의 기회가 된다면 좋지만,,,,<br>● 일은 일로 하자.<br><br>누구에게는 개발 뿐만 아니라 다양한 개발 외적인 일을 해야하는 경우도 있을 수 있구요.<br><br>주의: 물론 회사는 내 성장을 위한 곳이 아니긴 합니다.<br><br>가장 어렵고 좋은 방법은 바로 `"일과 내 성장을 일치 시키는 것"`이며<br><br>가장 쉽지만 자주하면 좋지 않은 방법 `"일과 내 성장이 일치되는 곳으로 이직"`하는 것 입니다.<br><br>ㅤ<br><br># 그래서 내 연차에 맞는 역량은 뭔데요?<br><br>프론트엔드도 하고 싶은 분야마다 달라서 연차마다 요구되는 역량이 다릅니다.<br><br>e.g.) 토스 FE 직군<br><br>● Frontend Product Developer: 대고객 제품 개발자<br><br>● Frontend UX Engineer: 디자인 시스템 및 인터렉션 개발자<br><br>● Frontend Platform Engineer: FE 의 개발환경 및 생산성 기여 개발자<br><br>(일반적인 대고객 제품 개발자 기준의 개인적인 의견)<br><br>신입<br><br>● 요구사항을 부족함 없이 구현할 수 있는 기본적인 기술적 역량 / 잠재력<br><br>~ 3년차 (주니어)<br><br>● 코드 복잡도를 낮추고 응집도를 높일 수 있는 기술적 역량<br>● 요구사항을 완수할 뿐만 아니라 내가 하고 있는 일정에 차질이 생길 경우 투명하게 공유<br>● 내 일 뿐만 아니라 내 일이 목표로 하는 공동의 목표에 적극적인 기여<br><br>~ 6년차 IC (중니어 ~ 시니어)<br><br>● 굉장히 어려운 문제의 근본적인 원인 분석과 Workaround / 근본적인 해결 방법<br>● 다른 사람의 성장 및 기술적 역량까지 이끌어 낼 수 있는 영향력<br>● 조직 전체의 개발 환경을 개선할 수 있는 역량<br><br>~ 6년차 매니저 (중니어 ~ 시니어)<br><br>● 달성해야하는 목표를 수행하기 위한 가장 빠른 전략을 수립<br>● 수많은 Task 의 우선순위를 적절하게 설정할 수 있어야함<br>● 팀원의 지속적인 성장을 책임지고 끊임없이 동기부여<br><br># `그래서 어떻게 성장할 수 있나요?`<br><br>● 내가 하고 싶은 방향을 정한 다음에 로드맵을 보고 트리를 정하면 됩니다.<br>● https://roadmap.sh/frontend?r=frontend-beginner<br>● https://roadmap.sh/frontend<br><br>ㅤ<br><br># 성장 CheatSheet<br><br>이번 시간을 통해 여러분이 얻어갈 수 있는 포인트가 있으면 좋을 것 같아서 마련해본 장표입니다.<br><br>1달마다 지속적으로 성장에 대한 정량적 수치를 기록하고 추이를 확인해서 나의 현재 위치를 파악하고 다음 단계로 넘어 갈 수 있는 지표와 질문들<br><br>1달을 주기로 회고하면서 내 위치와 성장하고 싶은 방향에 대해 지속적으로 파악해보세요.<br><br>> Q. 1개월 전에 비해 나는 O점 만큼 성장했다. ( 1 ~ 5 점)<br><br>- e.g.) 1점: 반복적인 업무만 지속적으로 하다보니 성장하지 못했다고 생각함<br>- e.g.) 5점: 코드리뷰간 설계에 대해서 새로운 인사이트를 얻었음<br><br>> Q. 지난 1개월동안 나는 내가 바라는 모습에 한발자국 가까워 졌다. ( 1 ~ 5 점)<br><br>- e.g.) 1점: 한달 전 정했던 모습에 가까워지지 못함<br>- e.g.) 5점: 한달 전 정했던 모습을 완전히 달성함<br><br>> Q. 지난 1개월 동안 성장에 가장 큰 장애물은?<br><br>- e.g.) 지속적인 반복 작업<br>- e.g.) 불필요한 야근<br><br>> Q. 1개월 뒤 내가 되고 싶은 구체적인 모습 3가지?<br><br>- e.g.) esbuild 의 동작 방식을 완전히 이해한다.<br>- e.g.) 트랜스파일러와 번들러의 차이에 대해 알게된다.<br>- e.g.) 혼자 레포를 구성해서 서비스를 띄울 수 있다.<br><br>혼자 성장하기 어렵다면<br><br>● 같이 일하는 동료나 사수에게 피드백 요청하기 (사수/동료)<br>    ● "제게 기대하는 역량/모습이 있나요?"<br>    ● "지난 2주간 모습을 봤을 때 더 잘할 수 있는 부분이 있을까요?"<br><br>```<br>이렇게 지속적으로 성장하면서 어려운 문제를 많이 풀어보고 싶다면?<br>```<br><br>채용공고: [Frontend Platform Engineer](https://toss.im/career/job-detail?job_id=4397469003&company=%ED%86%A0%EC%8A%A4&detailedPosition=%EA%B3%B5%ED%86%B5)15:T3212,<br>`소요 시간: 12분`<br><br>> 이 글은 우땅콘(우당탕탕 도서관 컨퍼런스)에서 짧게 발표했던 주제를 글로 작성한 내용입니다.<br><br>![](https://nodejsdeveloper.notion.site/image/attachment%3A1e6236ec-9318-4128-80d3-36028267d9af%3AChatGPT_Image_2025%E1%84%82%E1%85%A7%E1%86%AB_5%E1%84%8B%E1%85%AF%E1%86%AF_1%E1%84%8B%E1%85%B5%E1%86%AF_%E1%84%8B%E1%85%A9%E1%84%8C%E1%85%A5%E1%86%AB_05_00_56.png?table=block&id=1e5fb879-26e4-8015-923f-ef92ac109c40&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br>ㅤ<br><br>저는 토스코어 프론트엔드 플랫폼 팀에서 프론트엔드 개발환경에 집중하고 있는 정석호입니다.<br><br>오늘은 "프론트엔드의 지속적인 성장"이라는 내용으로 이야기를 나눠 보고 싶습니다.<br><br>제가 이제 6년차 정도 되었는데요, 일하다 보면서 문득 이런 생각들이 들더라구요, `"나는 지금 물경력이 아닐까?"` , `"내가 내 연차에 맞는 수준일까?"` ,  `"나만 이런 고민을 하고 있는 건 아닐까?"`<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F4217b69f-be6d-4871-90c1-ebb73acadf9d%2FUntitled.png?table=block&id=59dbdc4a-f4ca-4c0a-b504-434f956c3d7f&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>이런 고민들을 하면서 프론트엔드 엔지니어, 더 나아가서는 개발자의 성장에 대해서 생각을 해봤습니다.<br><br>성장이란 어느 순간에 찾아올까요?<br><br>꼭 개발을 잘 하게 되는 것만이 성장의 결과일까요?<br><br>일단 밑밥을 먼저 깔고 가보겠습니다.ㅎㅎ<br><br>ㅤ<br><br># 은탄환은 없다.<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F96242377-2f41-429c-b91c-ae6948af141e%2FUntitled.png?table=block&id=60c0a10d-ad4c-4c82-9a61-002376144eca&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>모든 문제를 해결해주는 은탄환이 없듯이, 사실상 정해진 정답은 없습니다. 상황에 따라 각자에게 적절한 방법과 성장의 대상이 다 다를 것 같아요.<br><br>그럼에도 이번에는 그나마 메타적으로 한번 접근해보고 싶었습니다.<br><br>그래서 `성장`이란 키워드를 다양한 관점으로 나눠서 생각해보기로 했어요.<br><br>ㅤ<br><br># 1. 수동적 성장 vs 목표한 성장<br><br>제가 생각한 `수동적 성장`은 `"성장에 대해 따로 고민하지 않아도 자연스럽게 성장하는 것"`인데요<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F24638c40-403a-498e-b7b5-ea80decf193a%2FUntitled.png?table=block&id=67af19a8-e176-4a21-86e2-3c06765e7dbd&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>보통 처음 입사한 `신입` 혹은 `이직한지 얼마 되지 않은 경력` 모두에게 있을 수 있는 성장 포인트입니다.<br><br>이론만으로 알고 있던 내용을 실전에서 써본다거나, 내가 알던 모든 맥락을 잃어버리고 완전히 새로운 곳에서 적응한다는 등 모두 나에게 없던 무언가를 얻을 수 있는 기회죠.<br><br>하지만 이런 성장의 경우, 보편적으로는 반복적인 업무와 크게 바뀌지 않는 맥락들로 인해 **장기적으로 지속되기 어렵습니다.**<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F3abc48d7-dbed-404e-8ddb-e2d64ce00afb%2FUntitled.png?table=block&id=164a15d1-b507-4c2e-9982-bb74cad6ff7e&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>그래서 입사한지 3년정도 지나게 되면, 보통 처음에 보셨던 걱정들을 하기 시작하죠.<br><br>● 난 물경력이 아닐까?<br>● 지금 이 일을 계속 해도 괜찮은 걸까?<br><br>되고 싶은 모습을 정하지 않으면 우리가 원하는 모습이 될 수 없습니다. 눈 가리고 달리기를 하는 것과 마찬가지에요.<br><br>예를 들면 다음과 같은 모습을 설정할 수 있어요.<br><br>### 목표한 하드 스킬 성장 예시<br><br>● 자바스크립트의 모듈 시스템 ESM/CJS 에 명확하게 이해하고 나만의 라이브러리를 배포할 수 있다.<br>● 다른사람에게 번들러와 트랜스파일러에 대해 명확하게 설명할 줄 알고 대표적인 예시 라이브러리의 구현체를 파악해봤다.<br>● Next.js / Node.js / React 등등의 최신 업데이트를 꾸준히 확인하고 내 서비스에 PoC 할 수 있다.<br><br>### 목표한 소프트 스킬 성장 예시<br><br>● 내가 해야할 작업의 소요 시간을 최대한 가깝게 예측할 수 있다.<br>● 써보고 싶은 기술 도입에 대해 같은 팀원들을 설득할 수 있다.<br><br>ㅤ<br><br># 2. 성장하기 좋은 가장 적절한 난이도<br><br>### 골디락스 존<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F828880d0-62e4-4a69-9bfc-d9594d056d84%2FUntitled.png?table=block&id=d95975ab-09e0-492f-9e05-f4196472ebea&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>이 그래프는 성장하기 가장 좋은 목표의 난이도를 알려줍니다.<br><br>중요한 점은 도전적이며 달성이 가능해야하는데요, 한 마디로 지금의 나라면 할 수도 있을 것 같은 목표들을 말합니다. 그렇다고 너무 쉽다면, 동기부여가 떨어질 수도 있어요.<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F21835a28-6b95-4b51-8de4-5249bbba75ea%2FUntitled.png?table=block&id=b1ebdf7a-555e-4a78-bedb-05dd3b0e1b9f&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>가장 쉬운 예시로 들어보자면, 달리기를 한번도 해본 적 없는 사람은 풀코스 마라톤에 도전했을 때 성장할 수 있을까요? 너무 어려워서 도전조차 쉽지 않습니다. 가장 처음은 쉬지 않고 3km를 달려서 내 현재 역량을 알아보고 내가 세웠던 최고 기록을 계속 해서 뛰어 넘는 도전을 해야 지속적인 재미를 느끼며 성장할 수 있습니다.<br><br>ㅤ<br><br># 장기 지속적인 성장<br><br>![Untitled](https://nodejsdeveloper.notion.site/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2Feb09f351-d003-4fd7-952c-de8c45d2d460%2F0c4018be-c8b1-4536-bf16-27699658ccf1%2FUntitled.png?table=block&id=24b332bb-557e-4808-9cfb-dad41ea0e405&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2)<br><br>● 현재 내 역량이 어느정도인지<br>● 내가 되고 싶은 모습의 역량은 어느정도인지<br>● 그 격차를 줄이기 위해서 어느정도로 노력해야하는지<br><br>지속적인 성장을 하기 위해서는 이러한 내용들을 명확하게 인지하고 있어야하고 내가 어느정도로 노력해야하는지 알 수 있으며 동기부여도 뒤따라오게 됩니다.<br><br>다음은, 성장을 어렵게 만드는 다양한 부재에 대해서 좀 소개드려볼게요.<br><br>● 공감의 부재<br>ㅤ● 운동을 왜 해야하지?<br>● 중요성의 부재<br>ㅤ● 오늘은 너무 바빠, 내일 가도 돼<br>● 동기부여의 부재<br>ㅤ● 해야하는 것도 공감하고, 오늘 시간도 남는데 가고 싶지 않아.<br><br>반대로 공감이 되지 않거나 중요하지 않다면 안해도 되는 거 아닐까요?<br><br>동기부여가 되지 않는 경우는 한번에 너무 높은 목표를 향해 도전해서 그런건 아닐까요?<br><br>이번 기회에 현재 목표로 하고 있는 것에 어떤 게 부족한지 한번 확인해보는 것도 좋을 것 같아요.<br><br>하지만 현실 세계에서는 항상 최적의 성장을 할 수 있는 업무만 할 수는 없죠?<br><br>● 성장의 기회가 된다면 좋지만,,,,<br>● 일은 일로 하자.<br><br>누구에게는 개발 뿐만 아니라 다양한 개발 외적인 일을 해야하는 경우도 있을 수 있구요.<br><br>주의: 물론 회사는 내 성장을 위한 곳이 아니긴 합니다.<br><br>가장 어렵고 좋은 방법은 바로 `"일과 내 성장을 일치 시키는 것"`이며<br><br>가장 쉽지만 자주하면 좋지 않은 방법 `"일과 내 성장이 일치되는 곳으로 이직"`하는 것 입니다.<br><br>ㅤ<br><br># 그래서 내 연차에 맞는 역량은 뭔데요?<br><br>프론트엔드도 하고 싶은 분야마다 달라서 연차마다 요구되는 역량이 다릅니다.<br><br>e.g.) 토스 FE 직군<br><br>● Frontend Product Developer: 대고객 제품 개발자<br><br>● Frontend UX Engineer: 디자인 시스템 및 인터렉션 개발자<br><br>● Frontend Platform Engineer: FE 의 개발환경 및 생산성 기여 개발자<br><br>(일반적인 대고객 제품 개발자 기준의 개인적인 의견)<br><br>신입<br><br>● 요구사항을 부족함 없이 구현할 수 있는 기본적인 기술적 역량 / 잠재력<br><br>~ 3년차 (주니어)<br><br>● 코드 복잡도를 낮추고 응집도를 높일 수 있는 기술적 역량<br>● 요구사항을 완수할 뿐만 아니라 내가 하고 있는 일정에 차질이 생길 경우 투명하게 공유<br>● 내 일 뿐만 아니라 내 일이 목표로 하는 공동의 목표에 적극적인 기여<br><br>~ 6년차 IC (중니어 ~ 시니어)<br><br>● 굉장히 어려운 문제의 근본적인 원인 분석과 Workaround / 근본적인 해결 방법<br>● 다른 사람의 성장 및 기술적 역량까지 이끌어 낼 수 있는 영향력<br>● 조직 전체의 개발 환경을 개선할 수 있는 역량<br><br>~ 6년차 매니저 (중니어 ~ 시니어)<br><br>● 달성해야하는 목표를 수행하기 위한 가장 빠른 전략을 수립<br>● 수많은 Task 의 우선순위를 적절하게 설정할 수 있어야함<br>● 팀원의 지속적인 성장을 책임지고 끊임없이 동기부여<br><br># `그래서 어떻게 성장할 수 있나요?`<br><br>● 내가 하고 싶은 방향을 정한 다음에 로드맵을 보고 트리를 정하면 됩니다.<br>● https://roadmap.sh/frontend?r=frontend-beginner<br>● https://roadmap.sh/frontend<br><br>ㅤ<br><br># 성장 CheatSheet<br><br>이번 시간을 통해 여러분이 얻어갈 수 있는 포인트가 있으면 좋을 것 같아서 마련해본 장표입니다.<br><br>1달마다 지속적으로 성장에 대한 정량적 수치를 기록하고 추이를 확인해서 나의 현재 위치를 파악하고 다음 단계로 넘어 갈 수 있는 지표와 질문들<br><br>1달을 주기로 회고하면서 내 위치와 성장하고 싶은 방향에 대해 지속적으로 파악해보세요.<br><br>> Q. 1개월 전에 비해 나는 O점 만큼 성장했다. ( 1 ~ 5 점)<br><br>- e.g.) 1점: 반복적인 업무만 지속적으로 하다보니 성장하지 못했다고 생각함<br>- e.g.) 5점: 코드리뷰간 설계에 대해서 새로운 인사이트를 얻었음<br><br>> Q. 지난 1개월동안 나는 내가 바라는 모습에 한발자국 가까워 졌다. ( 1 ~ 5 점)<br><br>- e.g.) 1점: 한달 전 정했던 모습에 가까워지지 못함<br>- e.g.) 5점: 한달 전 정했던 모습을 완전히 달성함<br><br>> Q. 지난 1개월 동안 성장에 가장 큰 장애물은?<br><br>- e.g.) 지속적인 반복 작업<br>- e.g.) 불필요한 야근<br><br>> Q. 1개월 뒤 내가 되고 싶은 구체적인 모습 3가지?<br><br>- e.g.) esbuild 의 동작 방식을 완전히 이해한다.<br>- e.g.) 트랜스파일러와 번들러의 차이에 대해 알게된다.<br>- e.g.) 혼자 레포를 구성해서 서비스를 띄울 수 있다.<br><br>혼자 성장하기 어렵다면<br><br>● 같이 일하는 동료나 사수에게 피드백 요청하기 (사수/동료)<br>    ● "제게 기대하는 역량/모습이 있나요?"<br>    ● "지난 2주간 모습을 봤을 때 더 잘할 수 있는 부분이 있을까요?"<br><br>```<br>이렇게 지속적으로 성장하면서 어려운 문제를 많이 풀어보고 싶다면?<br>```<br><br>채용공고: [Frontend Platform Engineer](https://toss.im/career/job-detail?job_id=4397469003&company=%ED%86%A0%EC%8A%A4&detailedPosition=%EA%B3%B5%ED%86%B5)12:{"metadata":[["$","title","0",{"children":"프론트엔드의 지속적인 성장"}],["$","meta","1",{"name":"description","content":"$13"}],["$","meta","2",{"property":"og:title","content":"프론트엔드의 지속적인 성장"}],["$","meta","3",{"property":"og:description","content":"$14"}],["$","meta","4",{"property":"og:image","content":"https://nodejsdeveloper.notion.site/image/attachment%3A1e6236ec-9318-4128-80d3-36028267d9af%3AChatGPT_Image_2025%E1%84%82%E1%85%A7%E1%86%AB_5%E1%84%8B%E1%85%AF%E1%86%AF_1%E1%84%8B%E1%85%B5%E1%86%AF_%E1%84%8B%E1%85%A9%E1%84%8C%E1%85%A5%E1%86%AB_05_00_56.png?table=block&id=1e5fb879-26e4-8015-923f-ef92ac109c40&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:title","content":"프론트엔드의 지속적인 성장"}],["$","meta","7",{"name":"twitter:description","content":"$15"}],["$","meta","8",{"name":"twitter:image","content":"https://nodejsdeveloper.notion.site/image/attachment%3A1e6236ec-9318-4128-80d3-36028267d9af%3AChatGPT_Image_2025%E1%84%82%E1%85%A7%E1%86%AB_5%E1%84%8B%E1%85%AF%E1%86%AF_1%E1%84%8B%E1%85%B5%E1%86%AF_%E1%84%8B%E1%85%A9%E1%84%8C%E1%85%A5%E1%86%AB_05_00_56.png?table=block&id=1e5fb879-26e4-8015-923f-ef92ac109c40&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1420&userId=&cache=v2"}],["$","link","9",{"rel":"icon","href":"/post/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
c:{"metadata":"$12:metadata","error":null,"digest":"$undefined"}
