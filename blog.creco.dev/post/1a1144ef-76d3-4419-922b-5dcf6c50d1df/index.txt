1:"$Sreact.fragment"
2:I[7951,["428","static/chunks/428-d9e925965c352fc6.js","177","static/chunks/app/layout-7f42cb55db1d85e2.js"],"Provider"]
3:I[1305,[],""]
4:I[6861,[],""]
5:I[3519,["428","static/chunks/428-d9e925965c352fc6.js","917","static/chunks/917-ffcc91d4040fdb33.js","17","static/chunks/17-7de176e02b0bc1ca.js","396","static/chunks/app/(id)/(prebuild)/1a1144ef-76d3-4419-922b-5dcf6c50d1df/page-f17eff1262513849.js"],"PostPage"]
6:I[5023,[],"MetadataBoundary"]
8:I[5023,[],"OutletBoundary"]
b:I[3573,[],"AsyncMetadataOutlet"]
d:I[5023,[],"ViewportBoundary"]
f:I[7240,[],""]
:HL["/post/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/post/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/post/_next/static/css/6e9c6e6502c03c58.css","style"]
:HL["/post/_next/static/css/c44545a39d3b4a63.css","style"]
0:{"P":null,"b":"XjCr5xjCypIQF_UyOtaR6","p":"/post","c":["","1a1144ef-76d3-4419-922b-5dcf6c50d1df",""],"i":false,"f":[[["",{"children":["(id)",{"children":["(prebuild)",{"children":["1a1144ef-76d3-4419-922b-5dcf6c50d1df",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/post/_next/static/css/6e9c6e6502c03c58.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_178516 __variable_66e6cd antialiased","children":["$","$L2",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}],{"children":["(id)",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:children:props:notFound:0:1:props:style","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:children:props:notFound:0:1:props:children:props:children:1:props:style","children":404}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:children:props:notFound:0:1:props:children:props:children:2:props:style","children":["$","h2",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:children:props:notFound:0:1:props:children:props:children:2:props:children:props:style","children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(prebuild)",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["1a1144ef-76d3-4419-922b-5dcf6c50d1df",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","$L5",null,{"id":"1a1144ef-76d3-4419-922b-5dcf6c50d1df"}],["$","$L6",null,{"children":"$L7"}],[["$","link","0",{"rel":"stylesheet","href":"/post/_next/static/css/c44545a39d3b4a63.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L8",null,{"children":["$L9","$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","R4weaOAQaqI7kiiV3Wvqd",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[3573,[],"AsyncMetadata"]
7:["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]
a:null
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
13:T248f,<br>`읽는 시간: 10분`<br><br> 안녕하세요, Frontend Platform Engineer 정석호입니다. 저는 맥북으로 개발을 시작한 지 벌써 꽤 시간이 흘렀는데요, 맥북을 쓰면서 작은 설정 하나가 생산성에 큰 차이를 만든다는 걸 몸소 느끼고 있어요. 이 글에서는 맥북을 쓰는 개발자라면 모르고 지나가기 힘든 몇 가지 팁을 제 경험을 바탕으로 정리해봤어요.<br><br> 이 글은 맥북을 사용하는 초심자부터 중급자까지 모두에게 도움이 될 수 있는 내용이에요. 특히 타이핑 속도나 작업 흐름이 살짝 답답하다고 느끼시는 분이라면, 오늘 알려드릴 설정만으로도 소소하게 스트레스가 줄어드는 경험을 하실 수 있을 거예요. 시작하기 전에, 제가 강조하는 점은 `"정답은 없어요"`라는 것! 각자의 환경이나 성향에 따라 다르게 느껴질 수 있으니, 하나씩 시도해보면서 여러분에게 맞는 설정을 찾아보시면 좋을 것 같아요.<br><br>## 1. 무각 키보드 훈련<br><br> 아마 많은 개발자가 타자를 치는 속도보다 생각이 더 빨리 돌아가는 경험을 했을 거예요. 저도 피지컬(손)이 머리를 못 따라가는 경우를 종종 겪곤 해요. 특히 오타라도 났다면 키보드를 쳐다보느라 생각과 시선의 흐름이 끊길 때가 있거든요. 그럴 때 "이거, 자판을 지워버리면 어떨까?"라는 생각이 문득 들었어요. 바로 무각 키보드 이야기인데요, 생각보다 생산성에 꽤 큰 영향을 줍니다.<br><br>### 무각 키보드가 뭘까요?<br><br>![](https://nodejsdeveloper.notion.site/image/attachment%3A4b4f401a-d3b4-46d9-8bbc-aa5b812329fb%3Aimage.png?table=block&id=204fb879-26e4-8084-b994-c76c124df4b6&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1000&userId=&cache=v2)<br><br> 무각 키보드는 말 그대로 각인된 글자가 없는 키보드를 말해요. 자판에 글자가 처음부터 찍혀 있지 않기 때문에, 키를 누를 때마다 손가락 감으로 위치를 파악해야 하죠. 무각 키캡만 따로 사서 교체해도 충분해요!<br><br>### 왜 무각 키보드를 써야 할까요?<br> 처음에는 불편하게 느껴질 수 있어요. `"아니, 글자가 없는데 타자를 어떻게 치지?"`라고 생각하실 거예요. 하지만 오히려 이 작은 불편함이 사고를 글자에 의존하지 않도록 도와줘요. **키보드를 내려다봐도 의미가 없어서** 내려다보는 횟수가 확연히 줄고, 손가락 감각으로 빠르게 타이핑할 수 있게 돼요. 개발하다 보면, 생각 흐름이 끊길 때마다 한숨이 나오잖아요? 저는 무각 키보드를 쓰고 나서부터 그런 순간이 거의 없어졌어요.<br><br>### 제 경험담 하나<br> 예전에 급하게 버그를 수정하던 중에 타이핑을 하다가 문자가 잘못 입력돼서 내려다본 적이 있었어요. 그런데 이후로는 무의식적으로 매번 키보드를 보게 되더라고요. 그러던 중 무각 키보드를 사서 사용하는데, 정말 신기하게도 내려다보지 않고 손가락 감으로만 입력하게 되더라고요. 처음엔 엄청 실수도 잦았지만, 일주일 정도 쓰다 보니 오히려 타자 속도가 더 향상됐어요. 오타가 줄었을 뿐만 아니라, 머릿속에 코드 흐름을 더 잘 기억할 수 있었거든요.<br><br>### 참고 팁<br> 물론 무각 키보드를 구매하지 않고도 연습할 방법이 있어요. 연습 사이트를 활용하면 되는데, 예를 들어 TypingClub 같은 곳에서 연습을 시작해보는 걸 추천해요. 조금 번거로울 수 있지만, 오히려 재미있게 게임처럼 진행하면서 타이핑 실력을 키울 수 있거든요!<br><br>> 안타깝지만, 무각 키보드는 처음에 이질감이 커요. 하지만 익숙해지고 나면, 마치 안 보이는 디스플레이 위에서 손가락을 움직이듯, 더 자연스럽게 코드를 작성할 수 있답니다.<br><br>## 2. 키보드 반응 속도 최적화<br><br> 개발하다 보면 터미널에서 명령어를 잘못 입력했을 때나, 에디터에서 커서를 옮기고 싶을 때, 어떻게 이동하시나요? 저는 예전에는 화살표 키를 누르다 보면 반응이 둔해서 가장자리를 손으로 두드릴 때도 있었어요. 간혹 터미널에서 긴 명령어를 입력한 뒤에 커서 몇 칸만 옮기고 싶은데, 키보드 반복 속도가 느리면 너무 답답하더라고요.<br><br>![](https://diligent-estimate-4b3.notion.site/image/attachment%3Af5738e7e-4d4a-48cd-8675-a8c4239a9b7e%3Aimage.png?table=block&id=204fb879-26e4-80d1-a17a-fd420e982bb9&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1320&userId=&cache=v2)<br><br>### 반복 속도 최대화하기<br><br>시스템 환경설정 > 키보드 > 키 반복 속도를 "빠르게"로 바꿔보세요. 맥북 기본 값은 중간 정도인데, 이를 최대로 올려주면 같은 키를 길게 눌렀을 때 훨씬 더 빠르게 반복 입력이 돼요.<br><br>### 반복 지연 시간 줄이기<br><br>같은 메뉴 안에서 "반복 지연 시간"을 "짧게"로 조절하면, 키를 누른 뒤 실제 반복 입력이 시작되기까지 걸리는 시간이 대폭 줄어들어요. 사실 이 설정만으로도 커서 이동하거나 명령어 삭제할 때 스트레스가 확 줄어요.<br><br>이제 아무 키나 그냥 꾹 누르고 있어도 바로바로 입력이 되니, 터미널에서도 쌓여있던 불편함이 한순간에 해소됩니다. 물론 환경에 따라 차이는 있는데요, 저는 이 설정을 바꾸고 나서부터는 터미널이나 에디터에서 커서를 이동하는 게 훨씬 수월해졌어요. 혹시 아직 설정 전이라면 당장 바꿔보시는 걸 추천합니다!<br><br>## 3. 앱 전환 단축키, 하이퍼키 활용법<br> 윈도우에서 `Alt` + `Tab` 을 누르면 최근에 쓴 앱으로 바로갈 수 있었죠? 맥북에서도 `Cmd` + `Tab` 을 통해 앱 전환이 가능하지만, 매번 눌러도 원하는 앱이 한두 단계 뒤에 있는 경우가 많아서 생각보다 불편할 때가 있어요. 이럴 때 저는 `하이퍼키(Hyper Key)`를 쓰기 시작했는데요, 정말 삶이 바뀌더라고요.<br><br>### 하이퍼키란?<br> 하이퍼키는 `Ctrl` + `Option` + `Shift` + `Cmd` 네 가지 키를 동시에 하나로 묶어서, 마치 독립된 키처럼 쓰는 방식이에요. 이렇게 설정해두면, 이 네 개의 키을 누른 상태에서 다른 키 하나를 눌러서 원하는 앱을 바로 실행할 수 있죠. 그리고 동시에 네 가지 키를 누르기 때문에 다른 단축키랑 겹칠 일도 거의 없어요.<br><br>### 하이퍼키 적용하기<br> 저는 Karabiner-Elements라는 앱을 사용해 설정했어요. Karabiner-Elements를 열고, Complex Modifications에서 하이퍼키 설정을 가져오면 되거든요. 예를 들어, Karabiner 를 설치하고 제가 준비한 이 URL을 이용하면 쉽게 설정을 추가할 수 있어요:<br><br>[설정하러 가기](karabiner://karabiner/assets/complex_modifications/import?url=https://creco-org.github.io/json-storage/karabiner/hyper-key.json)<br><br>이렇게 설정을 추가하면, 이제 하이퍼키를 원하는 키와 매핑할 준비가 된 거예요.<br><br>### 앱 전환에 등록해보기<br> 저는 Raycast라는 앱을 함께 사용했어요. Raycast에서 Apps Hotkey 기능을 켜고, `하이퍼키` + `v` 키를 누르면 VSCode, `하이퍼키` + `c` 키를 누르면 Chrome, `하이퍼키` + `s` 키를 누르면 Slack이 열리도록 등록해뒀답니다. 개발할 때 한 번의 키 입력으로 바로 원하는 도구가 띄워지니, 트랙패드를 찾으러 손을 옮길 필요가 사라졌어요.<br><br>### 사용 후 변화점<br>이전에는 `Cmd` + `Tab` 을 몇 번 눌러야 하지만, 지금은 하이퍼키 + 키 하나로 순식간에 앱이 전환돼요. 특히 VSCode로 돌아갈 때나, 문서를 확인하러 Chrome을 열 때, 또는 동료와 채팅하기 위해 Slack을 띄울 때 정말 편하더라고요. 이제 트랙패드까지 손이 가는 일은 거의 없어요! ㅎㅎ<br><br>## 정리<br><br>이번 포스팅에서는 제가 직접 경험해본 맥북 꿀팁 3가지를 공유했는데요, 어떠셨나요? 사실 작은 설정 하나만 바꿔도 일상 개발이 꽤나 부드러워진다는 걸 느끼셨을 거예요. 다음 글에서는 개발 워크플로우와 생산성을 위한 자동화애 관한 방법 4가지를 들고 올 테니, 기대해보셔도 좋아요!<br><br>마무리하기 전에 몇 가지 정리해볼게요:<br>● 무각 키보드: 내려다보지 않고 타이핑 연습하기. TypingClub 같은 사이트로 연습해보길 추천.<br>● 키 반응 속도 최적화: 시스템 환경설정에서 키 반복 속도와 지연 시간을 조절해서 터미널 작업을 매끄럽게.<br>● 하이퍼키: Karabiner-Elements + Raycast로 앱 전환 단축키를 간편하게 설정.<br><br>> 저와 함께 지속적으로 성장하면서 어려운 문제를 많이 풀어보고 싶다면?<br><br>채용공고: [Frontend Platform Engineer](https://toss.im/career/job-detail?job_id=4397469003&company=%ED%86%A0%EC%8A%A4&detailedPosition=%EA%B3%B5%ED%86%B5)14:T248f,<br>`읽는 시간: 10분`<br><br> 안녕하세요, Frontend Platform Engineer 정석호입니다. 저는 맥북으로 개발을 시작한 지 벌써 꽤 시간이 흘렀는데요, 맥북을 쓰면서 작은 설정 하나가 생산성에 큰 차이를 만든다는 걸 몸소 느끼고 있어요. 이 글에서는 맥북을 쓰는 개발자라면 모르고 지나가기 힘든 몇 가지 팁을 제 경험을 바탕으로 정리해봤어요.<br><br> 이 글은 맥북을 사용하는 초심자부터 중급자까지 모두에게 도움이 될 수 있는 내용이에요. 특히 타이핑 속도나 작업 흐름이 살짝 답답하다고 느끼시는 분이라면, 오늘 알려드릴 설정만으로도 소소하게 스트레스가 줄어드는 경험을 하실 수 있을 거예요. 시작하기 전에, 제가 강조하는 점은 `"정답은 없어요"`라는 것! 각자의 환경이나 성향에 따라 다르게 느껴질 수 있으니, 하나씩 시도해보면서 여러분에게 맞는 설정을 찾아보시면 좋을 것 같아요.<br><br>## 1. 무각 키보드 훈련<br><br> 아마 많은 개발자가 타자를 치는 속도보다 생각이 더 빨리 돌아가는 경험을 했을 거예요. 저도 피지컬(손)이 머리를 못 따라가는 경우를 종종 겪곤 해요. 특히 오타라도 났다면 키보드를 쳐다보느라 생각과 시선의 흐름이 끊길 때가 있거든요. 그럴 때 "이거, 자판을 지워버리면 어떨까?"라는 생각이 문득 들었어요. 바로 무각 키보드 이야기인데요, 생각보다 생산성에 꽤 큰 영향을 줍니다.<br><br>### 무각 키보드가 뭘까요?<br><br>![](https://nodejsdeveloper.notion.site/image/attachment%3A4b4f401a-d3b4-46d9-8bbc-aa5b812329fb%3Aimage.png?table=block&id=204fb879-26e4-8084-b994-c76c124df4b6&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1000&userId=&cache=v2)<br><br> 무각 키보드는 말 그대로 각인된 글자가 없는 키보드를 말해요. 자판에 글자가 처음부터 찍혀 있지 않기 때문에, 키를 누를 때마다 손가락 감으로 위치를 파악해야 하죠. 무각 키캡만 따로 사서 교체해도 충분해요!<br><br>### 왜 무각 키보드를 써야 할까요?<br> 처음에는 불편하게 느껴질 수 있어요. `"아니, 글자가 없는데 타자를 어떻게 치지?"`라고 생각하실 거예요. 하지만 오히려 이 작은 불편함이 사고를 글자에 의존하지 않도록 도와줘요. **키보드를 내려다봐도 의미가 없어서** 내려다보는 횟수가 확연히 줄고, 손가락 감각으로 빠르게 타이핑할 수 있게 돼요. 개발하다 보면, 생각 흐름이 끊길 때마다 한숨이 나오잖아요? 저는 무각 키보드를 쓰고 나서부터 그런 순간이 거의 없어졌어요.<br><br>### 제 경험담 하나<br> 예전에 급하게 버그를 수정하던 중에 타이핑을 하다가 문자가 잘못 입력돼서 내려다본 적이 있었어요. 그런데 이후로는 무의식적으로 매번 키보드를 보게 되더라고요. 그러던 중 무각 키보드를 사서 사용하는데, 정말 신기하게도 내려다보지 않고 손가락 감으로만 입력하게 되더라고요. 처음엔 엄청 실수도 잦았지만, 일주일 정도 쓰다 보니 오히려 타자 속도가 더 향상됐어요. 오타가 줄었을 뿐만 아니라, 머릿속에 코드 흐름을 더 잘 기억할 수 있었거든요.<br><br>### 참고 팁<br> 물론 무각 키보드를 구매하지 않고도 연습할 방법이 있어요. 연습 사이트를 활용하면 되는데, 예를 들어 TypingClub 같은 곳에서 연습을 시작해보는 걸 추천해요. 조금 번거로울 수 있지만, 오히려 재미있게 게임처럼 진행하면서 타이핑 실력을 키울 수 있거든요!<br><br>> 안타깝지만, 무각 키보드는 처음에 이질감이 커요. 하지만 익숙해지고 나면, 마치 안 보이는 디스플레이 위에서 손가락을 움직이듯, 더 자연스럽게 코드를 작성할 수 있답니다.<br><br>## 2. 키보드 반응 속도 최적화<br><br> 개발하다 보면 터미널에서 명령어를 잘못 입력했을 때나, 에디터에서 커서를 옮기고 싶을 때, 어떻게 이동하시나요? 저는 예전에는 화살표 키를 누르다 보면 반응이 둔해서 가장자리를 손으로 두드릴 때도 있었어요. 간혹 터미널에서 긴 명령어를 입력한 뒤에 커서 몇 칸만 옮기고 싶은데, 키보드 반복 속도가 느리면 너무 답답하더라고요.<br><br>![](https://diligent-estimate-4b3.notion.site/image/attachment%3Af5738e7e-4d4a-48cd-8675-a8c4239a9b7e%3Aimage.png?table=block&id=204fb879-26e4-80d1-a17a-fd420e982bb9&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1320&userId=&cache=v2)<br><br>### 반복 속도 최대화하기<br><br>시스템 환경설정 > 키보드 > 키 반복 속도를 "빠르게"로 바꿔보세요. 맥북 기본 값은 중간 정도인데, 이를 최대로 올려주면 같은 키를 길게 눌렀을 때 훨씬 더 빠르게 반복 입력이 돼요.<br><br>### 반복 지연 시간 줄이기<br><br>같은 메뉴 안에서 "반복 지연 시간"을 "짧게"로 조절하면, 키를 누른 뒤 실제 반복 입력이 시작되기까지 걸리는 시간이 대폭 줄어들어요. 사실 이 설정만으로도 커서 이동하거나 명령어 삭제할 때 스트레스가 확 줄어요.<br><br>이제 아무 키나 그냥 꾹 누르고 있어도 바로바로 입력이 되니, 터미널에서도 쌓여있던 불편함이 한순간에 해소됩니다. 물론 환경에 따라 차이는 있는데요, 저는 이 설정을 바꾸고 나서부터는 터미널이나 에디터에서 커서를 이동하는 게 훨씬 수월해졌어요. 혹시 아직 설정 전이라면 당장 바꿔보시는 걸 추천합니다!<br><br>## 3. 앱 전환 단축키, 하이퍼키 활용법<br> 윈도우에서 `Alt` + `Tab` 을 누르면 최근에 쓴 앱으로 바로갈 수 있었죠? 맥북에서도 `Cmd` + `Tab` 을 통해 앱 전환이 가능하지만, 매번 눌러도 원하는 앱이 한두 단계 뒤에 있는 경우가 많아서 생각보다 불편할 때가 있어요. 이럴 때 저는 `하이퍼키(Hyper Key)`를 쓰기 시작했는데요, 정말 삶이 바뀌더라고요.<br><br>### 하이퍼키란?<br> 하이퍼키는 `Ctrl` + `Option` + `Shift` + `Cmd` 네 가지 키를 동시에 하나로 묶어서, 마치 독립된 키처럼 쓰는 방식이에요. 이렇게 설정해두면, 이 네 개의 키을 누른 상태에서 다른 키 하나를 눌러서 원하는 앱을 바로 실행할 수 있죠. 그리고 동시에 네 가지 키를 누르기 때문에 다른 단축키랑 겹칠 일도 거의 없어요.<br><br>### 하이퍼키 적용하기<br> 저는 Karabiner-Elements라는 앱을 사용해 설정했어요. Karabiner-Elements를 열고, Complex Modifications에서 하이퍼키 설정을 가져오면 되거든요. 예를 들어, Karabiner 를 설치하고 제가 준비한 이 URL을 이용하면 쉽게 설정을 추가할 수 있어요:<br><br>[설정하러 가기](karabiner://karabiner/assets/complex_modifications/import?url=https://creco-org.github.io/json-storage/karabiner/hyper-key.json)<br><br>이렇게 설정을 추가하면, 이제 하이퍼키를 원하는 키와 매핑할 준비가 된 거예요.<br><br>### 앱 전환에 등록해보기<br> 저는 Raycast라는 앱을 함께 사용했어요. Raycast에서 Apps Hotkey 기능을 켜고, `하이퍼키` + `v` 키를 누르면 VSCode, `하이퍼키` + `c` 키를 누르면 Chrome, `하이퍼키` + `s` 키를 누르면 Slack이 열리도록 등록해뒀답니다. 개발할 때 한 번의 키 입력으로 바로 원하는 도구가 띄워지니, 트랙패드를 찾으러 손을 옮길 필요가 사라졌어요.<br><br>### 사용 후 변화점<br>이전에는 `Cmd` + `Tab` 을 몇 번 눌러야 하지만, 지금은 하이퍼키 + 키 하나로 순식간에 앱이 전환돼요. 특히 VSCode로 돌아갈 때나, 문서를 확인하러 Chrome을 열 때, 또는 동료와 채팅하기 위해 Slack을 띄울 때 정말 편하더라고요. 이제 트랙패드까지 손이 가는 일은 거의 없어요! ㅎㅎ<br><br>## 정리<br><br>이번 포스팅에서는 제가 직접 경험해본 맥북 꿀팁 3가지를 공유했는데요, 어떠셨나요? 사실 작은 설정 하나만 바꿔도 일상 개발이 꽤나 부드러워진다는 걸 느끼셨을 거예요. 다음 글에서는 개발 워크플로우와 생산성을 위한 자동화애 관한 방법 4가지를 들고 올 테니, 기대해보셔도 좋아요!<br><br>마무리하기 전에 몇 가지 정리해볼게요:<br>● 무각 키보드: 내려다보지 않고 타이핑 연습하기. TypingClub 같은 사이트로 연습해보길 추천.<br>● 키 반응 속도 최적화: 시스템 환경설정에서 키 반복 속도와 지연 시간을 조절해서 터미널 작업을 매끄럽게.<br>● 하이퍼키: Karabiner-Elements + Raycast로 앱 전환 단축키를 간편하게 설정.<br><br>> 저와 함께 지속적으로 성장하면서 어려운 문제를 많이 풀어보고 싶다면?<br><br>채용공고: [Frontend Platform Engineer](https://toss.im/career/job-detail?job_id=4397469003&company=%ED%86%A0%EC%8A%A4&detailedPosition=%EA%B3%B5%ED%86%B5)15:T248f,<br>`읽는 시간: 10분`<br><br> 안녕하세요, Frontend Platform Engineer 정석호입니다. 저는 맥북으로 개발을 시작한 지 벌써 꽤 시간이 흘렀는데요, 맥북을 쓰면서 작은 설정 하나가 생산성에 큰 차이를 만든다는 걸 몸소 느끼고 있어요. 이 글에서는 맥북을 쓰는 개발자라면 모르고 지나가기 힘든 몇 가지 팁을 제 경험을 바탕으로 정리해봤어요.<br><br> 이 글은 맥북을 사용하는 초심자부터 중급자까지 모두에게 도움이 될 수 있는 내용이에요. 특히 타이핑 속도나 작업 흐름이 살짝 답답하다고 느끼시는 분이라면, 오늘 알려드릴 설정만으로도 소소하게 스트레스가 줄어드는 경험을 하실 수 있을 거예요. 시작하기 전에, 제가 강조하는 점은 `"정답은 없어요"`라는 것! 각자의 환경이나 성향에 따라 다르게 느껴질 수 있으니, 하나씩 시도해보면서 여러분에게 맞는 설정을 찾아보시면 좋을 것 같아요.<br><br>## 1. 무각 키보드 훈련<br><br> 아마 많은 개발자가 타자를 치는 속도보다 생각이 더 빨리 돌아가는 경험을 했을 거예요. 저도 피지컬(손)이 머리를 못 따라가는 경우를 종종 겪곤 해요. 특히 오타라도 났다면 키보드를 쳐다보느라 생각과 시선의 흐름이 끊길 때가 있거든요. 그럴 때 "이거, 자판을 지워버리면 어떨까?"라는 생각이 문득 들었어요. 바로 무각 키보드 이야기인데요, 생각보다 생산성에 꽤 큰 영향을 줍니다.<br><br>### 무각 키보드가 뭘까요?<br><br>![](https://nodejsdeveloper.notion.site/image/attachment%3A4b4f401a-d3b4-46d9-8bbc-aa5b812329fb%3Aimage.png?table=block&id=204fb879-26e4-8084-b994-c76c124df4b6&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1000&userId=&cache=v2)<br><br> 무각 키보드는 말 그대로 각인된 글자가 없는 키보드를 말해요. 자판에 글자가 처음부터 찍혀 있지 않기 때문에, 키를 누를 때마다 손가락 감으로 위치를 파악해야 하죠. 무각 키캡만 따로 사서 교체해도 충분해요!<br><br>### 왜 무각 키보드를 써야 할까요?<br> 처음에는 불편하게 느껴질 수 있어요. `"아니, 글자가 없는데 타자를 어떻게 치지?"`라고 생각하실 거예요. 하지만 오히려 이 작은 불편함이 사고를 글자에 의존하지 않도록 도와줘요. **키보드를 내려다봐도 의미가 없어서** 내려다보는 횟수가 확연히 줄고, 손가락 감각으로 빠르게 타이핑할 수 있게 돼요. 개발하다 보면, 생각 흐름이 끊길 때마다 한숨이 나오잖아요? 저는 무각 키보드를 쓰고 나서부터 그런 순간이 거의 없어졌어요.<br><br>### 제 경험담 하나<br> 예전에 급하게 버그를 수정하던 중에 타이핑을 하다가 문자가 잘못 입력돼서 내려다본 적이 있었어요. 그런데 이후로는 무의식적으로 매번 키보드를 보게 되더라고요. 그러던 중 무각 키보드를 사서 사용하는데, 정말 신기하게도 내려다보지 않고 손가락 감으로만 입력하게 되더라고요. 처음엔 엄청 실수도 잦았지만, 일주일 정도 쓰다 보니 오히려 타자 속도가 더 향상됐어요. 오타가 줄었을 뿐만 아니라, 머릿속에 코드 흐름을 더 잘 기억할 수 있었거든요.<br><br>### 참고 팁<br> 물론 무각 키보드를 구매하지 않고도 연습할 방법이 있어요. 연습 사이트를 활용하면 되는데, 예를 들어 TypingClub 같은 곳에서 연습을 시작해보는 걸 추천해요. 조금 번거로울 수 있지만, 오히려 재미있게 게임처럼 진행하면서 타이핑 실력을 키울 수 있거든요!<br><br>> 안타깝지만, 무각 키보드는 처음에 이질감이 커요. 하지만 익숙해지고 나면, 마치 안 보이는 디스플레이 위에서 손가락을 움직이듯, 더 자연스럽게 코드를 작성할 수 있답니다.<br><br>## 2. 키보드 반응 속도 최적화<br><br> 개발하다 보면 터미널에서 명령어를 잘못 입력했을 때나, 에디터에서 커서를 옮기고 싶을 때, 어떻게 이동하시나요? 저는 예전에는 화살표 키를 누르다 보면 반응이 둔해서 가장자리를 손으로 두드릴 때도 있었어요. 간혹 터미널에서 긴 명령어를 입력한 뒤에 커서 몇 칸만 옮기고 싶은데, 키보드 반복 속도가 느리면 너무 답답하더라고요.<br><br>![](https://diligent-estimate-4b3.notion.site/image/attachment%3Af5738e7e-4d4a-48cd-8675-a8c4239a9b7e%3Aimage.png?table=block&id=204fb879-26e4-80d1-a17a-fd420e982bb9&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1320&userId=&cache=v2)<br><br>### 반복 속도 최대화하기<br><br>시스템 환경설정 > 키보드 > 키 반복 속도를 "빠르게"로 바꿔보세요. 맥북 기본 값은 중간 정도인데, 이를 최대로 올려주면 같은 키를 길게 눌렀을 때 훨씬 더 빠르게 반복 입력이 돼요.<br><br>### 반복 지연 시간 줄이기<br><br>같은 메뉴 안에서 "반복 지연 시간"을 "짧게"로 조절하면, 키를 누른 뒤 실제 반복 입력이 시작되기까지 걸리는 시간이 대폭 줄어들어요. 사실 이 설정만으로도 커서 이동하거나 명령어 삭제할 때 스트레스가 확 줄어요.<br><br>이제 아무 키나 그냥 꾹 누르고 있어도 바로바로 입력이 되니, 터미널에서도 쌓여있던 불편함이 한순간에 해소됩니다. 물론 환경에 따라 차이는 있는데요, 저는 이 설정을 바꾸고 나서부터는 터미널이나 에디터에서 커서를 이동하는 게 훨씬 수월해졌어요. 혹시 아직 설정 전이라면 당장 바꿔보시는 걸 추천합니다!<br><br>## 3. 앱 전환 단축키, 하이퍼키 활용법<br> 윈도우에서 `Alt` + `Tab` 을 누르면 최근에 쓴 앱으로 바로갈 수 있었죠? 맥북에서도 `Cmd` + `Tab` 을 통해 앱 전환이 가능하지만, 매번 눌러도 원하는 앱이 한두 단계 뒤에 있는 경우가 많아서 생각보다 불편할 때가 있어요. 이럴 때 저는 `하이퍼키(Hyper Key)`를 쓰기 시작했는데요, 정말 삶이 바뀌더라고요.<br><br>### 하이퍼키란?<br> 하이퍼키는 `Ctrl` + `Option` + `Shift` + `Cmd` 네 가지 키를 동시에 하나로 묶어서, 마치 독립된 키처럼 쓰는 방식이에요. 이렇게 설정해두면, 이 네 개의 키을 누른 상태에서 다른 키 하나를 눌러서 원하는 앱을 바로 실행할 수 있죠. 그리고 동시에 네 가지 키를 누르기 때문에 다른 단축키랑 겹칠 일도 거의 없어요.<br><br>### 하이퍼키 적용하기<br> 저는 Karabiner-Elements라는 앱을 사용해 설정했어요. Karabiner-Elements를 열고, Complex Modifications에서 하이퍼키 설정을 가져오면 되거든요. 예를 들어, Karabiner 를 설치하고 제가 준비한 이 URL을 이용하면 쉽게 설정을 추가할 수 있어요:<br><br>[설정하러 가기](karabiner://karabiner/assets/complex_modifications/import?url=https://creco-org.github.io/json-storage/karabiner/hyper-key.json)<br><br>이렇게 설정을 추가하면, 이제 하이퍼키를 원하는 키와 매핑할 준비가 된 거예요.<br><br>### 앱 전환에 등록해보기<br> 저는 Raycast라는 앱을 함께 사용했어요. Raycast에서 Apps Hotkey 기능을 켜고, `하이퍼키` + `v` 키를 누르면 VSCode, `하이퍼키` + `c` 키를 누르면 Chrome, `하이퍼키` + `s` 키를 누르면 Slack이 열리도록 등록해뒀답니다. 개발할 때 한 번의 키 입력으로 바로 원하는 도구가 띄워지니, 트랙패드를 찾으러 손을 옮길 필요가 사라졌어요.<br><br>### 사용 후 변화점<br>이전에는 `Cmd` + `Tab` 을 몇 번 눌러야 하지만, 지금은 하이퍼키 + 키 하나로 순식간에 앱이 전환돼요. 특히 VSCode로 돌아갈 때나, 문서를 확인하러 Chrome을 열 때, 또는 동료와 채팅하기 위해 Slack을 띄울 때 정말 편하더라고요. 이제 트랙패드까지 손이 가는 일은 거의 없어요! ㅎㅎ<br><br>## 정리<br><br>이번 포스팅에서는 제가 직접 경험해본 맥북 꿀팁 3가지를 공유했는데요, 어떠셨나요? 사실 작은 설정 하나만 바꿔도 일상 개발이 꽤나 부드러워진다는 걸 느끼셨을 거예요. 다음 글에서는 개발 워크플로우와 생산성을 위한 자동화애 관한 방법 4가지를 들고 올 테니, 기대해보셔도 좋아요!<br><br>마무리하기 전에 몇 가지 정리해볼게요:<br>● 무각 키보드: 내려다보지 않고 타이핑 연습하기. TypingClub 같은 사이트로 연습해보길 추천.<br>● 키 반응 속도 최적화: 시스템 환경설정에서 키 반복 속도와 지연 시간을 조절해서 터미널 작업을 매끄럽게.<br>● 하이퍼키: Karabiner-Elements + Raycast로 앱 전환 단축키를 간편하게 설정.<br><br>> 저와 함께 지속적으로 성장하면서 어려운 문제를 많이 풀어보고 싶다면?<br><br>채용공고: [Frontend Platform Engineer](https://toss.im/career/job-detail?job_id=4397469003&company=%ED%86%A0%EC%8A%A4&detailedPosition=%EA%B3%B5%ED%86%B5)12:{"metadata":[["$","title","0",{"children":"맥북 쓰는 개발자라면 알아야할 3가지"}],["$","meta","1",{"name":"description","content":"$13"}],["$","meta","2",{"property":"og:title","content":"맥북 쓰는 개발자라면 알아야할 3가지"}],["$","meta","3",{"property":"og:description","content":"$14"}],["$","meta","4",{"property":"og:image","content":"https://nodejsdeveloper.notion.site/image/attachment%3A4b4f401a-d3b4-46d9-8bbc-aa5b812329fb%3Aimage.png?table=block&id=204fb879-26e4-8084-b994-c76c124df4b6&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1000&userId=&cache=v2"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:title","content":"맥북 쓰는 개발자라면 알아야할 3가지"}],["$","meta","7",{"name":"twitter:description","content":"$15"}],["$","meta","8",{"name":"twitter:image","content":"https://nodejsdeveloper.notion.site/image/attachment%3A4b4f401a-d3b4-46d9-8bbc-aa5b812329fb%3Aimage.png?table=block&id=204fb879-26e4-8084-b994-c76c124df4b6&spaceId=eb09f351-d003-4fd7-952c-de8c45d2d460&width=1000&userId=&cache=v2"}],["$","link","9",{"rel":"icon","href":"/post/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
c:{"metadata":"$12:metadata","error":null,"digest":"$undefined"}
